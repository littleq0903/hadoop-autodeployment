#!/bin/bash
# preinst script for hadoop
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

HBASE_INIT_SCRIPT=/etc/init.d/hbase

add_user() {
	if ! getent passwd $1 >/dev/null ; then
		if [ $# = '2' ]; then
			useradd \
				--$2 \
				--no-create-home \
				--home-dir "/var/lib/hadoop/$1" \
				--comment "Hadoop ${1^^}" \
				--shell /bin/bash \
				$1 >/dev/null 2>/dev/null || :
			usermod --append --groups hadoop $1 || :
		elif [ $# = '1' ]; then 
			useradd \
				--gid hadoop \
				--create-home \
				--comment "Hadoop ADMIN" \
				--shell /bin/bash \
				$1 >/dev/null 2>/dev/null || :
			passprompt="\e[01;31mSetting hadoop administrator's password\e[00m"
			echo -e $passprompt
			echo "Enter Password:"
			read -s pass1
			echo "Retry Password:"
			read -s pass2
			while [[ ! $pass1 -eq $pass2 ]] && [[ -n $pass1 ]]
			do
				echo -e "\e[01;31mPassword mismatch or empty\e[00m"
                        	echo "Enter Password:"
                 	        read -s pass1
                        	echo "Retry Password:"
                        	read -s pass2 
			done 
			echo "$1:$pass1" | chpasswd
		else
			return 1;
		fi
	fi
	return 0;
}

case "$1" in
   install|upgrade)
      if [ -x ${HBASE_INIT_SCRIPT} ]; then
         ${HBASE_INIT_SCRIPT} stop
      fi   
      # add group      
      if ! getent group hadoop >/dev/null; then
         groupadd --system hadoop >/dev/null 2>/dev/null || :
      fi
      
      # add user
      add_user hbase system
    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0

