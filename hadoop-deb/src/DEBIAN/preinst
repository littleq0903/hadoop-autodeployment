#!/bin/sh
# preinst script for hadoop
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


add_user() {
	if ! getent passwd $1 >/dev/null ; then
		if [ $# == 2 ]; then
			useradd \
				--$2 \
				--no-create-home \
				--home-dir "/var/lib/hadoop/$1" \
				--comment "Hadoop ${1^^}" \
				--shell /bin/bash \
				$1 >/dev/null 2>/dev/null || :
			usermod --append --groups hadoop $1 || :
		elif [ $# == 1 ]; then 
			useradd \
				--gid hadoop \
				--create-home \
				--comment "Hadoop ADMIN" \
				--shell /bin/bash \
				$1 >/dev/null 2>/dev/null || :
			passprompt="\e[01;31mSetting hadoop administrator's password\e[00m"
			echo 
			passwd $1 
		else
			return 1;
		fi
	fi
	return 0;
}

case "$1" in
   install|upgrade)
   	  # TODO: stop hadoop daemon before install
   	   
      # add group      
      if ! getent group hadoop >/dev/null; then
         groupadd --system hadoop >/dev/null 2>/dev/null || :
      fi
      
      # add hdfs yarn mapred 
      add_user hdfs system
      add_user yarn system
      add_user mapred system
      # add admin user
      add_user hadmin
    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0

