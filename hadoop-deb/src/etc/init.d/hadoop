#!/bin/sh
#
#

set -e

usage="/etc/init.d/hadoop (start|stop|restart|status)"

if [ $# -ne 1 ]; then
   echo $usage
   exit 1
fi


HADOOP_SCRIPT_HOME=/usr/sbin

. /lib/lsb/init-functions

start_hadoop_master() {
   if [ ! -d "$HADOOP_SCRIPT_HOME" ] ; then
      echo "... directory $HADOOP_SCRIPT_HOME does not exist!" >&2
      return 1
   fi
   su yarn -c "$HADOOP_SCRIPT_HOME/yarn-daemon.sh start resourcemanager"
   su hdfs -c "$HADOOP_SCRIPT_HOME/sbin/hadoop-daemon.sh --script hdfs start namenode"
   su mapred -c "$HADOOP_SCRIPT_HOME/mr-jobhistory-daemon.sh start historyserver"  
}

start_hadoop_slave() {
   if [ ! -d "$HADOOP_SCRIPT_HOME" ] ; then
      echo "... directory $HADOOP_SCRIPT_HOME does not exist!" >&2
      return 1
   fi
   su yarn -c "$HADOOP_SCRIPT_HOME/yarn-daemon.sh start nodemanager"
   $HADOOP_SCRIPT_HOME/sbin/hadoop-daemon.sh --script hdfs start datanode
}

stop_hadoop_master() {
   if [ ! -d "$HADOOP_SCRIPT_HOME" ] ; then
      echo "... directory $HADOOP_SCRIPT_HOME does not exist!" >&2
      return 1
   fi
   su yarn -c "$HADOOP_SCRIPT_HOME/yarn-daemon.sh stop resourcemanager"
   su hdfs -c "$HADOOP_SCRIPT_HOME/sbin/hadoop-daemon.sh --script hdfs stop namenode"
   su mapred -c "$HADOOP_SCRIPT_HOME/mr-jobhistory-daemon.sh stop historyserver"  
}

stop_hadoop_master() {
   if [ ! -d "$HADOOP_SCRIPT_HOME" ] ; then
      echo "... directory $HADOOP_SCRIPT_HOME does not exist!" >&2
      return 1
   fi
   su yarn -c "$HADOOP_SCRIPT_HOME/yarn-daemon.sh stop nodemanager"
   $HADOOP_SCRIPT_HOME/sbin/hadoop-daemon.sh --script hdfs stop datanode
}


case $1 in
  start)
    log_daemon_msg "Starting hadoop master daemons"
    start_hadoop_master 
    log_end_msg 0
    log_daemon_msg "Starting hadoop slave daemons"
    start_hadoop_slave
    log_end_msg 0
    ;;
  stop)
    log_daemon_msg "Stopping hadoop master daemons"
    stop_hadoop_master 
    log_end_msg 0
    log_daemon_msg "Stopping hadoop slave daemons"
    stpo_hadoop_slave
    log_end_msg 0
    ;;
  restart)
    $0 stop
    $0 start
    ;;
  status)
    jps
    ;;
  *)
    echo $usage
    ;;
esac
